#include "bitcoin2_MASK.h"
#include "bitcoin2_PIX.h"
#include "HUD_PIX.h"
#include "HUD_MASK.h"
#include "CryptoPunk_MASK.h"
#include "CryptoPunk_PIX.h"
#define tileW 16         // 16 Tiles Across
#define tileH 12         // 12 Tiles Down   
#define tileSize 20      // Tile Width (in pixels)
#define numLevels 4      // Number of Levels
boolean isLevelDrawn = false;

int levels[numLevels][tileW * tileH] {
  // All Tiles
  {
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x21, 0x22, 0x23, 0x24, 0x00, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x21, 0x22, 0x23, 0x24, 0x00, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x21, 0x22, 0x23, 0x24, 0x00, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
    0x21, 0x22, 0x23, 0x24, 0x00, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20,
  },
  // Level 1 - Front Lawn/Bitcoin
  {
    0x08, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0F, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x2E, 0x28,
    0x0D, 0x09, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x2F, 0x29,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x09, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x30, 0x2A,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x08, 0x0C, 0x0C, 0x0C, 0x13, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x0A, 0x13, 0x13, 0x13, 0x13, 0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0C, 0x0C, 0x0C, 0x06, 0x13, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x13, 0x13, 0x13, 0x12, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x09, 0x13, 0x13, 0x13, 0x0B, 0x13, 0x13, 0x13, 0x0B, 0x26, 0x25,
    0x07, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x10, 0x05, 0x0E, 0x0E, 0x0E, 0x05, 0x25, 0x25,
  },
  // Level 2 - Front Lawn/LiteCoin
    {
    0x08, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x06, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x2E, 0x28,
    0x0D, 0x09, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x2F, 0x29,
    0x0D, 0x13, 0x13, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x13, 0x13, 0x0B, 0x30, 0x2A,
    0x0D, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x0A, 0x0A, 0x0A, 0x13, 0x0A, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x11, 0x13, 0x13, 0x0A, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x25, 0x25,
    0x0D, 0x13, 0x13, 0x0A, 0x13, 0x09, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x0B, 0x26, 0x25,
    0x07, 0x0E, 0x0E, 0x05, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x05, 0x25, 0x25,
  },
    // Level 3 - Mansion/Ethereum
  {
    0x1A, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x1E, 0x19, 0x25, 0x25,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2E, 0x28,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x2F, 0x29,
    0x1F, 0x16, 0x23, 0x15, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x16, 0x24, 0x24, 0x15, 0x1C, 0x30, 0x2A,
    0x1F, 0x1C, 0x23, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0x25,
    0x1F, 0x16, 0x23, 0x15, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0x25,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0x25,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0x25,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0x25,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x25, 0x25,
    0x1F, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x1C, 0x26, 0x25,
    0x1B, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x21, 0x20, 0x20, 0x20, 0x20, 0x18, 0x25, 0x25,
  },
};

void drawLevels(int thisLevel) {
  for (int y = 0; y < tileH; y++) {
    for (int x = 0; x < tileW; x++) {
      int index = x + (y * tileW);
      int whichTile = levels[thisLevel][index];

      int finalX = x * tileSize;
      int finalY = y * tileSize;
      tft.drawRGBBitmap(finalX, finalY, HUD_PIX[whichTile], tileSize, tileSize);
    }
  }
}


//  {
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//    0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13, 0x13,
//  },
